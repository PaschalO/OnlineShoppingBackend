version: 2.1

orbs:
  node: circleci/node@7.0.0
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.8

jobs:
  lint:
    executor:
      name: node/default
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
            - node-modules-
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run ESLint
          command:  npm run lint "$(circleci tests glob 'src/**/*.ts' | circleci tests split --split-by=filesize)"
      - run:
          name: Run Prettier
          command: npm run prettier "$(circleci tests glob 'src/**/*.ts' | circleci tests split --split-by=filesize)"
      - save_cache:
          paths:
            - ~/.npm
          key: node-modules-{{ checksum "package-lock.json" }}
  build:
    executor:
      name: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
            - node-modules-
      - node/install-packages:
          pkg-manager: npm
      - save_cache:
          paths:
            - ~/.npm
          key: node-modules-{{ checksum "package-lock.json" }}
      - run:
          name: Backend Build
          command: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - .  # Persist the entire project directory or specific folders/files

  deploy:
    executor: python-executor
    steps:
      - attach_workspace:
          at: ~/workspace  # Attach the workspace at a specific directory
      - run:
          name: Debug Workspace
          command: |
            echo "Workspace Contents:"
            ls -la ~/workspace  # List all files to confirm they are accessible
      - run:
          name: Install EB CLI
          command: |
            pip install awsebcli --upgrade
            eb --version
      - run:
          name: Execute custom deployment script
          command: |
           cd ~/workspace
           eb init OnlineShopping -r ca-central-1 -p "Node.js 20 running on 64bit Amazon Linux 2023" && eb deploy --staged

workflows:
  build-and-test:
    jobs:
      - lint
      - build:
          requires:
            - lint
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: "master"
